---
- name: Bootstrap a new server
  hosts: all
  become: true
  vars:
    hostname: "{{ inventory_hostname }}"
    user_name: alicia
    new_user: alicia
    user_ssh_key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
    srv_owner: alicia
    srv_group: alicia
    password: "{{ user_password | password_hash('sha512') }}"
    docker_users:
      - alicia

  pre_tasks:
    - name: Ensure Python is available
      raw: test -e /usr/bin/python3 || (apt update && apt install -y python3)
      changed_when: false

    - name: Warn if user_password is not set
      ansible.builtin.debug:
        msg: |
          ⚠️ WARNING: 'user_password' is not defined!
          User {{ new_user }} will not be able to use sudo without a password.
          SSH root login will not be disabled until this is fixed.
      when: user_password is not defined

  roles:
    - role: common
    - role: hostname
      tags: [ hostname, initial ]
    - role: directories
      tags: [ directories, initial ]
    - role: users
      tags: [ users, initial, essential ]
    - role: ssh
      tags: [ ssh, initial, security, essential ]
    - role: timezone
      tags: [ timezone, initial ]
    - role: firewall
      tags: [ firewall, initial, security, essential ]
    - role: fail2ban
      tags: [ fail2ban, security ]
    - role: geerlingguy.docker
      tags: [ docker ]
    - role: dotfiles
      tags: [ dotfiles ]
    - role: monit
      tags: [ monit ]
    - role: cockpit
      tags: [ cockpit ]
    - role: borg
      tags: [ borg, backups ]
    - role: maldet
      tags: [ maldet, security ]
    - role: lynis
      tags: [ lynis, security ]


- name: Check if user can connect with Ansible
  hosts: all
  gather_facts: false
  become: false
  remote_user: "{{ new_user }}"
  tasks:
    - name: Confirm login is working and set user_ready flag
      set_fact:
        user_ready: true
