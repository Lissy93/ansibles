---
- name: Skip Prometheus role if disabled
  meta: end_host
  when: not prometheus_enabled | bool

- name: Ensure prometheus group exists
  ansible.builtin.group:
    name: "{{ prometheus_group }}"
    state: present
    system: yes

- name: Ensure prometheus user exists
  ansible.builtin.user:
    name: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    create_home: no
    shell: /usr/sbin/nologin
    system: yes
    state: present

- name: Create installation, config & data directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: "0755"
  loop:
    - "{{ prometheus_install_dir }}"
    - "{{ prometheus_config_dir }}"
    - "{{ prometheus_data_dir }}"

- name: Download Prometheus {{ prometheus_version }}
  ansible.builtin.get_url:
    url: "{{ prometheus_download_url }}"
    dest: "/tmp/prometheus-{{ prometheus_version }}.tar.gz"
    mode: "0644"
  retries: 3
  delay: 5
  register: dl
  until: dl is succeeded

- name: Extract Prometheus binaries
  ansible.builtin.unarchive:
    src: "/tmp/prometheus-{{ prometheus_version }}.tar.gz"
    dest: "{{ prometheus_install_dir }}"    # ‚Üê now using the versioned dir
    remote_src: true
    extra_opts: ["--strip-components=1"]
  notify: Link Prometheus binaries

- name: Deploy prometheus.yml
  ansible.builtin.template:
    src: "prometheus.yml.j2"
    dest: "{{ prometheus_config_dir }}/prometheus.yml"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: "0644"
  notify: Restart Prometheus

- name: Deploy systemd unit for Prometheus
  ansible.builtin.template:
    src: "prometheus.service.j2"
    dest: "/etc/systemd/system/prometheus.service"
    owner: root
    group: root
    mode: "0644"
  notify:
    - Reload systemd
    - Restart Prometheus

- name: Enable and start Prometheus service
  ansible.builtin.systemd:
    name: prometheus
    enabled: yes
    state: started

- name: Wait for Prometheus ready endpoint
  ansible.builtin.uri:
    url: "http://localhost:9090/-/ready"
    status_code: 200
    return_content: no
    timeout: 5
  register: prom_ready
  retries: 5
  delay: 3
  until: prom_ready.status == 200
  failed_when: prom_ready.status != 200
  changed_when: false

- name: Verify Prometheus service is active
  ansible.builtin.command:
    cmd: systemctl is-active prometheus
  register: prom_active
  changed_when: false
  failed_when: prom_active.stdout != "active"
