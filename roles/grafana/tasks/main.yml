- name: Skip Grafana role if disabled
  ansible.builtin.meta: end_host
  when: not (grafana_enabled | bool)

- name: Warn and skip if required vars are missing
  ansible.builtin.debug:
    msg: >
      Skipping Grafana role: you must define
      grafana_repo_key_url and grafana_repo
  when:
    - grafana_enabled | bool
    - grafana_repo_key_url is not defined
    - grafana_repo is not defined

- name: End Grafana role because essentials are missing
  ansible.builtin.meta: end_host
  when:
    - grafana_enabled | bool
    - grafana_repo_key_url is not defined
    - grafana_repo is not defined

- name: Ensure apt-transport-https, wget and gnupg are installed
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - wget
      - gnupg
    state: present
    update_cache: yes

- name: Add Grafana GPG key
  ansible.builtin.apt_key:
    url: "{{ grafana_repo_key_url }}"
    keyring: /etc/apt/keyrings/grafana-archive-keyring.gpg
    state: present

- name: Add Grafana APT repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/grafana-archive-keyring.gpg] https://apt.grafana.com stable main"
    filename: grafana
    state: present
    update_cache: yes


- name: Install Grafana package
  ansible.builtin.apt:
    name:    "{{ grafana_package }}"
    state:   latest
    update_cache: no

- name: Deploy custom grafana.ini if requested
  ansible.builtin.template:
    src:  grafana.ini.j2
    dest: /etc/grafana/grafana.ini
    owner: root
    group: root
    mode:  '0644'
  notify: Restart Grafana
  when: grafana_ini | length > 0

- name: Enable and start Grafana service
  ansible.builtin.systemd:
    name: "{{ grafana_service }}"
    state: started
    enabled: yes

- name: Wait for Grafana HTTP to be available
  ansible.builtin.uri:
    url:          "http://localhost:{{ grafana_http_port }}/api/health"
    status_code:  200
    return_content: no
    timeout:      10
  register: grafana_health
  retries: 5
  delay:   5
  until:   grafana_health.status == 200
  failed_when: grafana_health.status != 200
  changed_when: false
